# Generated by Django 5.1.7 on 2025-03-30 13:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VirtualRouter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(default='192.168.1.1', protocol='IPv4')),
                ('subnet_mask', models.GenericIPAddressField(default='255.255.255.0', protocol='IPv4')),
                ('admin_password', models.CharField(default='admin', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RouterLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('log_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('security', 'Security Alert'), ('connection', 'Connection Event')], max_length=20)),
                ('message', models.TextField()),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4')),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='client.virtualrouter')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mac_address', models.CharField(blank=True, max_length=17, null=True)),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4')),
                ('vendor', models.CharField(choices=[('generic', 'Generic'), ('cisco', 'Cisco'), ('tp_link', 'TP-Link'), ('netgear', 'Netgear'), ('d_link', 'D-Link'), ('asus', 'Asus')], default='generic', max_length=50)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('hardware_version', models.CharField(blank=True, max_length=50, null=True)),
                ('software_version', models.CharField(blank=True, max_length=50, null=True)),
                ('connected_since', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_online', models.BooleanField(default=True)),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='client.virtualrouter')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dhcp_enabled', models.BooleanField(default=True)),
                ('dhcp_start_ip', models.GenericIPAddressField(default='192.168.1.100', protocol='IPv4')),
                ('dhcp_end_ip', models.GenericIPAddressField(default='192.168.1.200', protocol='IPv4')),
                ('dns_primary', models.GenericIPAddressField(default='8.8.8.8', protocol='IPv4')),
                ('dns_secondary', models.GenericIPAddressField(default='8.8.4.4', protocol='IPv4')),
                ('wifi_enabled', models.BooleanField(default=True)),
                ('wifi_ssid', models.CharField(default='VirtualNetwork', max_length=100)),
                ('wifi_password', models.CharField(default='password123', max_length=100)),
                ('wifi_security', models.CharField(default='WPA2', max_length=20)),
                ('router', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='network_config', to='client.virtualrouter')),
            ],
        ),
        migrations.CreateModel(
            name='RouterUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=100)),
                ('user_type', models.CharField(choices=[('admin', 'Administrator'), ('guest', 'Guest'), ('limited', 'Limited Access')], default='guest', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='router_users', to='client.virtualrouter')),
            ],
            options={
                'unique_together': {('router', 'username')},
            },
        ),
    ]
